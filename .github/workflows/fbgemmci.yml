name: FBGEMMCI

on:
  push:    
    branches:
      - master 
  pull_request:
    branches:
      - master
  
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest] 

    steps:
    - uses: actions/checkout@v2
    - name: Checkout submodules
      shell: bash
      run: |
        auth_header="$(git config --local --get http.https://github.com/.extraheader)"
        git submodule sync --recursive
        git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1

    - name: Get env vars
      run: |
        echo GITHUB_WORKFLOW   = $GITHUB_WORKFLOW
        echo HOME              = $HOME
        echo GITHUB_ACTION     = $GITHUB_ACTION
        echo GITHUB_ACTIONS    = $GITHUB_ACTIONS
        echo GITHUB_REPOSITORY = $GITHUB_REPOSITORY
        echo GITHUB_EVENT_NAME = $GITHUB_EVENT_NAME
        echo GITHUB_EVENT_PATH = $GITHUB_EVENT_PATH
        echo GITHUB_WORKSPACE  = $GITHUB_WORKSPACE
        echo GITHUB_SHA        = $GITHUB_SHA
        echo GITHUB_REF        = $GITHUB_REF
        c++ --verbose
 
    - name: Build static FBGEMM lib 
      run: |
        set -e
        mkdir build_static
        cd build_static
        cmake -DUSE_SANITIZER=address -DFBGEMM_LIBRARY_TYPE=static ..
        make -j2

    - name: Download SDE
      if: contains(runner.os, 'linux')   # not run on macos-latest now due to supporting AVX2
      run: |
        set -e

        cd build_static
        which wget
        which git
        git clone https://github.com/marehr/intel-sde-downloader.git
        ls
        pip install -r intel-sde-downloader/requirements.txt
        python intel-sde-downloader/intel-sde-downloader.py sde-external-8.35.0-2019-03-11-lin.tar.bz2
        ls
        tar -xvf sde-external-8.35.0-2019-03-11-lin.tar.bz2
        echo "==========files==========="
        ls sde-external-8.35.0-2019-03-11-lin
        rm sde-external-8.35.0-2019-03-11-lin.tar.bz2

    - name: Setup tmate session
      if: contains(runner.os, 'linux') 
      uses: mxschmitt/action-tmate@v2

    - name: Test SDE Phase1
      if: contains(runner.os, 'linux')   # not run on macos-latest now due to supporting AVX2
      run: |
        set -e
        cd build_static
        echo "==========Bfloat16ConvertTest==========="
        date
        sde-external-8.35.0-2019-03-11-lin/sde64 -skx -- test/Bfloat16ConvertTest
        echo "==========EmbeddingSpMDM8BitTest========"
        date
        sde-external-8.35.0-2019-03-11-lin/sde64 -skx -- test/EmbeddingSpMDM8BitTest
        echo "Finished phase 1"

    - name: Test SDE Phase2
      if: contains(runner.os, 'linux')   # not run on macos-latest now due to supporting AVX2
      run: |       
        set -e
        cd build_static
        echo "==========PackedRequantizeAcc16Test====="
        date
        sde-external-8.35.0-2019-03-11-lin/sde64 -skx -- test/PackedRequantizeAcc16Test 
        echo "==========RowWiseSparseAdagradFusedTest==="
        date
        sde-external-8.35.0-2019-03-11-lin/sde64 -skx -- test/RowWiseSparseAdagradFusedTest
        date
        echo "Finished phase 2"

    - name: Test SDE Phas3e
      if: contains(runner.os, 'linux')   # not run on macos-latest now due to supporting AVX2
      run: |           
        set -e
        cd build_static
        echo "==========I8DepthwiseTest==============="
        date 
        sde-external-8.35.0-2019-03-11-lin/sde64 -skx -- test/I8DepthwiseTest
        echo "Finished phase3"

    - name: Test static FBGEMM lib
      if: contains(runner.os, 'linux')   # not run on macos-latest now due to supporting AVX2
      run: |
        set -e
        cd build_static
        ctest

    - name: Build shared FBGEMM lib
      run: |
        set -e
        mkdir build_shared
        cd build_shared
        cmake -DUSE_SANITIZER=address -DFBGEMM_LIBRARY_TYPE=shared ..
        make -j

    - name: Test shared FBGEMM lib
      if: contains(runner.os, 'linux')   # not run on macos-latest now due to supporting AVX2
      run: |
        set -e
        cd build_shared
        ctest

